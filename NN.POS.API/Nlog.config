<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      throwConfigExceptions="true"
      internalLogFile="C:\inetpub\private\logs\nn.pos.api\internalLog.txt">

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <!-- the targets to write to -->
  <targets>
    <target name="alldata" xsi:type="AsyncWrapper" overflowAction="Grow" queueLimit="10" batchSize="10" timeToSleepBetweenBatches="30">
      <target xsi:type="File" fileName="C:\inetpub\private\logs\nn.pos.api\${shortdate}.log"
              concurrentWrites="true"
              keepFileOpen="true"
              layout="${time}|${uppercase:${level}}|${aspnet-request-method}|${aspnet-response-statuscode}|${message} ${exception:format=tostring}" />
    </target>

    <!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
    <target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <logger name="System.Net.Http.*" maxlevel="Info" final="true" />

    <logger name="*" minlevel="Trace" writeTo="alldata" />
  </rules>
</nlog>