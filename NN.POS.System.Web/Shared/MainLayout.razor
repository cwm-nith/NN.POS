@using global::System.Security.Claims
@inherits LayoutComponentBase

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />


<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudDrawerHeader>
            <MudButton Variant="Variant.Text" OnClick="ToDashboard">
                <MudText Typo="Typo.h6" Class="mt-1 text-white">NN POS System</MudText>
            </MudButton>
        </MudDrawerHeader>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <AuthorizeView>
            <NotAuthorized>
                <LoginRedirect />
            </NotAuthorized>
            <Authorized>
                <NavMenu />
            </Authorized>
        </AuthorizeView>
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {

    private void ToDashboard()
    {
        NavigationManager.NavigateTo(RouteName.Dashboard);
    }

    bool _drawerOpen = true;
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private static string UserDisplayName(IReadOnlyCollection<Claim> claims)
    {
        var firstName = claims.Where(c => c.Type == "nameid")
            .Select(x => x.Value).FirstOrDefault();

        var lastName = claims.Where(c => c.Type == "userId")
            .Select(c => c.Value).FirstOrDefault();

        if (!string.IsNullOrEmpty(firstName) || !string.IsNullOrEmpty(lastName))
        {
            return $"{firstName}  {lastName}";
        }
        var email = claims.Where(c => c.Type == "email").Select(x => x.Value).FirstOrDefault();
        return email ?? "";
    }
}